@model IEnumerable<PT_tool.Models.QuestionDetail>

@Scripts.Render("~/bundles/treeview")
@Styles.Render("~/Content/css-tree")
@Styles.Render("~/Content/fontawesome")

<ul class="list-group">

    @foreach (var item in Model)
    {
        <li class="list-group-item">
            <div class="card">
                <h6 class="card-header"><a href="@item.question.link">@item.question.title</a></h6>
                <div class="card-body">
                    <h7 class="card-title">Special title treatment</h7>
                    <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" data-whatever="@item.question.id">Add Topic</button>
                </div>
            </div>
        </li>
    }

</ul>


<script type="text/javascript">    

    $(function () {

        console.log("fefefe");
        var tree= $('#tree').simpleTree(options, data);


        //  弹窗 出现 事件
        $('#exampleModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var recipient = button.data('whatever') // Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            var modal = $(this);

            //reset tree
            tree.clearSelection();
        });


    });

</script>

