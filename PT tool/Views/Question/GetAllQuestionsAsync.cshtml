@model IEnumerable<PT_tool.Models.QuestionDetail>

@Scripts.Render("~/bundles/treeview")
@Styles.Render("~/Content/css-tree")
@Styles.Render("~/Content/fontawesome")

<ul class="list-group">

    @foreach (var item in Model)
    {
        <li class="list-group-item">
            <div class="card">
                <h6 class="card-header"><a href="@item.question.link">@item.question.title</a></h6>
                <div class="card-body">
                    <h7 class="card-title">Special title treatment</h7>
                    <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
                    <p id="@item.question.id" title="item" data-questionid="@item.question.question_id" data-platform="@item.question.platform">
                        <label class="font-weight-bold">Supported Topic :</label>                        
                    </p>
                    <button type="button" class="btn btn-primary disabled" data-toggle="modal" data-target="#exampleModal" data-qid="@item.question.id">Add Topic</button>
                </div>
            </div>
        </li>
    }

</ul>


<script type="text/javascript">


    function GetTopic(e) {
        let questionid = $(e).data('questionid');
            let platform = $(e).data('platform');
            let topicurl = '@Html.Raw(@Url.Action("GetSupportedTopicAsync", "Topic", new { platform = "para1", question_id = "para2" }))'.replace("para1", encodeURIComponent(platform)).replace("para2",questionid);

            console.log(topicurl);

            $(e).load(topicurl);
    }

    $(function () {

        // load supported topic
        $('p[Title="item"]').each((i, e) => {
            GetTopic(e);
        });

        console.log("初始化 treeview");
        var tree = $('#tree').simpleTree(options, data).on('simpleTree:change', function (event,selectednode) {
            console.log(event);
            console.log(selectednode);

            if (selectednode != undefined) {
                $('#save').attr("data-original-title", selectednode.label);
                $('#save').data('tid', selectednode.value);
                $('#save').prop("disabled", false);
            } else {
                $('#save').attr("data-original-title", "No Selected Topic");
                $('#save').prop("disabled", true);
            }
        });

        //  弹窗 出现 事件
        $('#exampleModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var qid = button.data('qid') // Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            var modal = $(this);
            modal.find('#save').data("qid", qid);

            //reset tree
            console.log(tree);
            tree.clearSelection();
            tree.collapseAll();
            tree.toggleSubtree(tree.getNodeFromValue(23494));
        });


    });

</script>

